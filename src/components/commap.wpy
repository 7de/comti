<style lang="scss">
/* .con{
  position: relative;
  transition: all .15s;
  .close{
    position: absolute;
    bottom:-9.8%;
    right: 0;
    width: 80rpx;
    height:80rpx;
    line-height: 80rpx;
    z-index: 20;
    color: #1AAD19;
    >text{
      font-size: 48rpx;
    }
  }
}
#mapCon{
  position: absolute;
  top:0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.markermask{
  height:100%;
  color: #444;
  font-size:28rpx;
  padding:0 30rpx 40rpx;
  background-color: #fff;
}
.map-tag{
  margin: 0 20rpx;
  border-radius: 20px;
  border-bottom-left-radius: 0;
  &::after{
    content:'';
    border-width:0
  }
} */
</style>

<template>
  <view class="con" style="height:{{showMap?71:93}}vh">
    <map id="mapCon" class="" latitude="{{latitude}}" longitude="{{longitude}}" markers="{{markers}}" controls="{{controls}}" bindcontroltap="bindcontroltap" bindmarkertap="bindmarkertap" show-location/>
    <zanPopup direction="bottom">
      <view class="markermask">
        <view class="zan-font-16">
          {{markersinfo["callout"].siteName}}充电站
          <view class="zan-tag zan-tag--primary map-tag">慢充</view>
          <view class="zan-tag zan-tag--warn zan-tag--plain">24h</view>
        </view>
        <view class="zan-c-gray-dark margin-top-15 zan-font-12 zan-ellipsis" style="width:100%">地址：{{markersinfo["callout"].siteAddress}}</view>
        <view class="margin-top-10">
          <text class="padding-right-30">空闲：<text class="zan-c-green">{{markersinfo["callout"].free?markersinfo["callout"].free:0}}</text></text>
          <text>总设备：{{markersinfo["callout"].equipment?markersinfo["callout"].equipment:0}}</text>
        </view>
        <view class="margin-top-10">
          <text class="padding-right-30">电费：<text class="zan-c-green">{{markersinfo["callout"].electricity?markersinfo["callout"].electricity:'0.00'}}</text>元/度</text>
          <text>服务费：<text class="zan-c-green">{{markersinfo["callout"].servicefee?markersinfo["callout"].servicefee:'0.00'}}</text>元/次</text>
        </view>
      </view>
    </zanPopup>
    <view class="close zan-center" @tap="toggleTopPopup" wx:if="{{showMap}}"><text class="iconfont icon-wrong"></text></view>
  </view>
</template>

<script>
import wepy from 'wepy'

import zanPopup from '../components/zan-popup'
import api from '../common/api'

const equiUrl = 'equip/equipSocket/querySocketStatus' // 扫描设备状态
const markerURL = 'sites/sites/' // 站点

export default class Commap extends wepy.component {
  props = {
    latitude: {
      type: String,
      default: '22.60561'
    },
    longitude: {
      type: String,
      default: '113.838300'
    }
  }
  data = {
    /* latitude: wepy.getStorageSync('user_latitude') ? wepy.getStorageSync('user_latitude') : '22.60561',
    longitude: wepy.getStorageSync('user_longitude') ? wepy.getStorageSync('user_longitude') : '113.838300', */
    controls: [],
    markers: [],
    oldMarkerID: null,
    markersinfo: {},
    showMap: false,
    showPopup: false,
    _token: '',
    height: '' // 屏幕高度
  }
  components = {
    zanPopup
  }

  onLoad(options) {
    const _this = this
    wepy.getSystemInfo({
      success: (res) => {
        this.height = res.windowHeight
        this.$apply()
      }
    })
    if (!this.latitude) {
      console.log('没有位置2')
      wepy.getLocation({
        type: 'gcj02',
        success: (res) => {
          let latitude = res.latitude
          let longitude = res.longitude
          wepy.setStorageSync('user_longitude', longitude)
          wepy.setStorageSync('user_latitude', latitude)
          this.longitude = longitude
          this.latitude = latitude
          this.$apply()
          _this.movetoPosition()
        },
        fail: (rel) => {
          _this.getScopeLocation()
        }
      })
    }
    console.log('纬度2：' + this.latitude)
    this.iniMap()
    this.movetoPosition()
    this.getMarkers()
    this.mapControl()
    this._token = wepy.getStorageSync('token_r')
  }

  methods = {
    // 地图控件点击处理
    bindcontroltap(e) {
      switch (e.controlId) {
        case 1: this.movetoPosition()
          break
        case 2: this.openCode()
          break
        case 3: wepy.navigateTo({
          url: '/pages/personal'
        })
      }
    },
    // 标点点击
    bindmarkertap(e) {
      let _markers = this.markers
      let markerId = e.markerId
      for (let v in _markers) {
        if (_markers[v].id === markerId) {
          this.markersinfo = _markers[v]
        }
      }
      if (!this.showMap && this.oldMarkerID !== markerId) {
        this.toggleTopPopup()
        this.oldMarkerID = markerId
      } else if (!this.showMap && this.oldMarkerID === markerId) {
        this.toggleTopPopup()
      }
    },
    toggleTopPopup() {
      this.$invoke('zanPopup', 'togglePopup')
      this.showMap = !this.showMap
      this.$apply()
    }
  }
  // 初始化地图
  iniMap() {
    this.mapCtx = wepy.createMapContext('mapCon')
  }
  toggleTopPopup() {
    this.$invoke('zanPopup', 'togglePopup')
    this.showMap = !this.showMap
    this.$apply()
  }

  // 定位到本地坐标
  movetoPosition() {
    this.mapCtx.moveToLocation()
  }

  // 获取地图标记
  getMarkers() {
    api.get(markerURL + 'queryMapSiteList').then(res => {
      // console.log(res.data)
      this.markers = res.data
      this.$apply()
    })
  }

  // 地图控件
  mapControl() {
    wepy.getSystemInfo({
      success: res => {
        this.controls = [{
          id: 1,
          iconPath: '/images/location_2.png',
          position: {
            left: 5,
            top: res.windowHeight - 165,
            width: 60,
            height: 60
          },
          clickable: true
        }, {
          id: 2,
          iconPath: '/images/code_2.png',
          position: {
            left: res.windowWidth / 2 - 70,
            top: res.windowHeight - 162,
            width: 138,
            height: 55
          },
          clickable: true
        }, {
          id: 3,
          iconPath: '/images/user_2.png',
          position: {
            left: res.windowWidth - 65,
            top: res.windowHeight - 165,
            width: 60,
            height: 60
          },
          clickable: true
        }, {
          id: 4,
          iconPath: '/images/pos.png',
          position: {
            left: res.windowWidth / 2 - 14,
            top: res.windowHeight / 2 - 32,
            width: 28,
            height: 28
          },
          clickable: false
        }]
        this.$apply()
      }
    })
  }

  // 扫一扫
  openCode() {
    const _this = this
    wepy.scanCode({
      success: (res) => {
        const _num = res.result
        const _numIndex = _num.indexOf('=')
        const _numNum = _num.substring(_numIndex + 1)
        wepy.showLoading({
          title: '正在查询设备...',
          mask: true
        })
        api.get(equiUrl + '?rdSession=' + _this._token + '&serialNo=' + _numNum + '&tagsFlag=true').then(res => {
          wepy.hideLoading()
          wepy.navigateTo({
            url: '/pages/scancode/index?num=' + _numNum
          })
        })
      }
    })
  }

  // 是否授权当前位置
  getScopeLocation() {
    wepy.getSetting({
      success: (res) => {
        const _this = this
        if (res.authSetting['scope.userLocation'] !== undefined && res.authSetting['scope.userLocation'] !== true) {
          wepy.showModal({
            title: '是否授权当前位置',
            content: '需要获取您的地理位置，请确认授权，否则地图信息可能会有误！',
            success: (res) => {
              if (res.cancel) {
                console.info('1授权失败返回数据')
              } else if (res.confirm) {
                wepy.openSetting({
                  success: (data) => {
                    console.log(data)
                    if (data.authSetting['scope.userLocation'] === true) {
                      wepy.showToast({
                        title: '授权成功',
                        icon: 'success',
                        duration: 1000
                      })
                      _this.movetoPosition()
                    } else {
                      wepy.showToast({
                        title: '授权失败',
                        icon: 'success',
                        duration: 2000
                      })
                    }
                  }
                })
              }
            }
          })
        }
      }
    })
  }
}
</script>
