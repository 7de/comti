<style lang="scss">
.logo-img{
  width: 230rpx;
}
.logo-tip{
  margin-top:-115rpx;
  margin-bottom:130rpx;
  >text{
    display: inline-block
  }
}
.logo-bd{
  >.logo-bd-info{
    padding-left: 180rpx;
  }
  .logo-bd__item{
    padding: 15rpx 0;
  }
}
</style>

<template>
  <view class="container">
    <view class="logo-hd zan-center">
      <image src="../images/logo.png" mode="aspectFit" class="logo-img" />
    </view>
    <view class="logo-tip zan-center">
      <text class="zan-c-gray zan-font-12">您所授权的信息，我们将不会对外公布，请放心授权！</text>  
    </view>
    <view class="logo-bd">
      <view class="padding-rl-30 padding-bottom-30">
        <button type="primary" open-type="getUserInfo" bindgetuserinfo="bindGetUserInfo" lang="zh_CN">点击授权</button>
      </view>
    </view>
    <footer />
    <zanToptips/>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Footer from '../components/footer'
  import zanToptips from '../components/zan-toptips'
  import api from '../common/api'
  import page from '../common/page'
  import Info from '../common/setinfo'
  // const URL = 'platform/weChat/wechatLogin'
  const URL = 'wxpay/wechatLogin'
  export default class Authorize extends wepy.page {
    config = {
      navigationBarTitleText: '用户授权'
    }
    components = {
      footer: Footer,
      zanToptips
    }
    data = {
      infoLogo: Info.info.logo,
      code: null,
      num: 0 // 授权次数
    }
    onLoad(option) {
    }
    methods = {
    }
    bindGetUserInfo(e) {
      this.postLogin(this.num)
    }
    // 用户授权
    postLogin(num) {
      num++
      wepy.showLoading({
        title: '正在校验信息...',
        mask: true
      })
      wepy.login({
        success: res => {
          wepy.hideLoading()
          if (res.code) {
            // 获取登录code
            this.code = res.code
            wepy.getSetting({
              success: (res) => {
                if (res.authSetting['scope.userInfo']) {
                  wepy.getUserInfo({
                    lang: 'zh_CN',
                    success: (res) => {
                      /* console.log(this.code)
                      console.log(res) */
                      let _params = Object.assign({
                        code: this.code,
                        encryptedData: res.encryptedData,
                        iv: res.iv,
                        signature: res.signature,
                        rawData: res.rawData
                      })
                      this.postAuth(_params, num)
                    }
                  })
                } else {
                  this.showTopTips('我们需要获取您的信息，请重新授权')
                }
              }
            })
          } else {
            this.showTopTips('登录失败，请稍后重试')
          }
        }
      })
    }
    // 授权
    postAuth(params, num) {
      const _this = this
      wepy.showLoading({
        title: '授权中...',
        mask: true
      })
      wepy.request({
        url: api.apiData.host + URL,
        method: 'POST',
        data: params,
        success: (res) => {
          wepy.hideLoading()
          console.log(res)
          console.log('授权次数：' + num)
          if (res.data.code === 0) {
            _this.$parent.token = res.data.data['access_token']
            _this.$apply()
            wepy.setStorageSync('token_r', res.data.data['access_token'])
            console.log(_this.$parent.token)
            console.log(_this.getCurrentPages().length)
            if (_this.getCurrentPages().length > 1) {
              page.goBack()
            } else {
              page.goHome()
            }
          } else if (res.data.code === -1) {
            console.log('次数：' + num)
            if (num < 3) {
              this.postLogin(num)
            } else {
              wepy.showToast({
                title: res.data.msg ? res.data.msg : res.data.message,
                icon: 'none',
                duration: 2000
              })
            }
          } else {
            wepy.showToast({
              title: res.data.msg ? res.data.msg : res.data.message,
              icon: 'none',
              duration: 2000
            })
          }
        },
        fail: (err) => {
          wepy.hideLoading()
          wepy.showModal({
            title: '错误提示',
            content: err.data.msg + ' ' + err.status,
            showCancel: false,
            confirmText: '我知道了',
            success: (res) => {
            }
          })
        }
      })
    }
    // 顶部提示
    showTopTips(content) {
      this.$invoke('zanToptips', 'showZanTopTips', { content: content, options: 2000 })
    }
  }
</script>
