<style lang="scss">
.scan-box{
  >.zan-panel{
    margin-top: 30rpx;
  }
  >.zan-panel-title{
    padding-top: 30rpx;
  }
  .scan-input{
    font-size: 40rpx;
  }
  .scan-subtitle{
    width: 120rpx;
    height:28px;
    line-height: 28px;
    text-align: center;
  }
  .scan-subtitle-txt{
    line-height: 28px;
  }
  .scan-input{
    width: 80%;
    height:28px;
    font-size:16px;
    font-weight:bold
  }
  .scan-cell{
    padding-top:10px;
    padding-bottom:10px;
  }
  .scan-btn{
    button{
      height: 38px;
      line-height: 38px;
      font-size: 12px;
      color: #fff;
      background-color: #f47a55;
      border:1px solid #fff;
      >text{
        margin-left: 5px;
        position: relative;
      }
    }
  }
.scan-btn button.zan-btn--disabled{
  background-color: #f8f8f8;
  border-color:#e5e5e5;
  color:#999;
}
  .account-width{
    width: 90%;
  }
}
</style>
<template>
  <view class="container scan-box">
    <block wx:if="{{showLoading}}">
      <Loading />
    </block>
    <block wx:else>
      <view class="zan-panel">
        <view class="zan-cell scan-cell">
          <view class="zan-cell__bd zan-clearfix">
            <view class="scan-subtitle zan-pull-left">
              <view class="iconfont icon-qrcode zan-font-22" style="color:#7fb80e;"></view>
            </view>
            <input type="number" class="zan-pull-left zan-field__input scan-input" bindblur='blurInput' value="{{code}}" focus="{{input_focus}}"  placeholder="请输入二维码编号"/>
          </view>
        </view>
      </view>
      <view class="zan-panel-title">请选择充电时长：</view>
      <view class="zan-panel">
        <zanSelect1 :items="items" :checkedValue.sync="checked_base" :disabled.sync="equiDisabled" componentId="base" ></zanSelect1>
      </view>
      <view class="zan-panel-title">预估金额：<text class="zan-font-12">(电费{{changeFee}}+服务费{{serviceFee}})</text></view>
      <view class="zan-panel">
        <view class="zan-cell scan-cell">
          <view class="zan-cell__bd zan-clearfix">
            <view class="scan-subtitle zan-pull-left">
              <view class="iconfont icon-uutmoney zan-font-24" style="color:#7fb80e;"></view>
            </view>
            <text class="zan-pull-left zan-font-22 zan-c-red scan-subtitle-txt">￥{{totalFee}}</text>
          </view>
        </view>
      </view>
      <view class="zan-panel-title">账户金额：</view>
      <view class="zan-panel">
        <view class="zan-cell">
          <view class="zan-cell__bd" style="overflow:hidden">
            <text class="zan-pull-left zan-c-red scan-subtitle-txt zan-ellipsis zan-font-26 account-width">￥{{account}}</text>  
          </view>
          <view class="zan-cell__ft scan-btn">
            <button type="button" style="overflow:hidden;font-size:12px;" class="{{showTopup?'zan-btn--disabled':''}}" disabled="{{showTopup}}" @tap="goTopup">
              <view class="iconfont icon-signboard zan-font-18 zan-pull-left"></view>
              <text class="zan-pull-left">余额充值</text>
            </button>
          </view>
        </view>
      </view>
      <view class="zan-panel" style="margin:30rpx 40rpx">
        <button class="zan-btn zan-btn--primary" @tap="goCharging">确认并提交</button>
      </view>
    </block>
    <zanToptips/>
  </view>
</template>
<script>
import wepy from 'wepy'
import zanSelect from '../../components/zan-select'
import zanToptips from '../../components/zan-toptips'
import Loading from '../../components/loading'
import api from '../../common/api'
import page from '../../common/page'

const balaneURL = 'wallet/customWallet/' // 钱包
const chargrURL = 'server/' // 开始充电
const equiUrl = 'equip/equipSocket/querySocketStatus' // 查询设备

export default class ScanIndex extends wepy.page {
  config = {
    'navigationBarTitleText': '充电服务'
  }
  components = {
    zanSelect1: zanSelect,
    zanToptips,
    Loading
  }
  data = {
    showLoading: false,
    showTopup: true,
    items: [
      {
        value: '120',
        name: '智能充满自停'
      },
      {
        value: '1',
        name: '1小时'
      },
      {
        value: '2',
        name: '2小时'
      },
      {
        value: '3',
        name: '3小时'
      },
      {
        value: '5',
        name: '5小时'
      },
      {
        value: '6',
        name: '6小时'
      },
      {
        value: '8',
        name: '8小时'
      },
      {
        value: '12',
        name: '12小时'
      }
    ],
    checked_base: 120,
    code: null, // 插座ID
    input_focus: false,
    time_value: 12, // 充电时长
    charger_mode: 3, // 充电模式
    account: '加载中...',
    changeFee: '0.00', // 充电费
    serviceFee: '0.00', // 服务费
    totalFee: '0.00', // 总费用
    _token: null,
    equiDisabled: false
  }
  onLoad(option) {
    // 页面传值
    if (option.num) {
      this.code = option.num
    } else if (option.q !== undefined) {
      let _url = decodeURIComponent(option.q) // 字符分割
      let _urlBox = _url.split('num=')
      this.code = _urlBox[1]
    }
  }
  onShow() {
    this._token = this.$parent.token
    if (this._token) {
      this.getBalance()
      this.checkEqui()
    } else {
      wepy.showModal({
        title: '温馨提示',
        content: '您暂未授权或授权已过期',
        showCancel: false,
        confirmText: '去授权',
        success: function(res) {
          if (res.confirm) {
            page.goAuthorize()
          }
        }
      })
    }
  }
  onReady() {
    // 设备可用，默认获取‘充满自停’预估金额
    if (!this.equiDisabled) {
      this.checkMoney()
    } else {
      this.equiDisabledFun()
    }
  }
  methods = {
    blurInput(e) {
      let _code = e.detail.value
      if (this.code !== _code) {
        this.code = _code
        this.$apply()
        // 设备查询
        this.checkEqui()
      }
    },
    // 订单提交
    goCharging() {
      const _this = this
      if (!this.code) {
        this.input_focus = true
        this.showTopTips('请确认二维码编号是否填写')
      } else if (this.equiDisabled) {
        this.input_focus = true
        this.showTopTips('二维码编号失效，请重新填写')
      } else if (!this.time_value) {
        this.showTopTips('请选择充电时长')
      } else if (this.totalFee > parseFloat(this.account)) {
        this.showTopTips('您的余额不足以选择此服务，请及时充值')
      } else {
        // 确认提示 --start
        wepy.showModal({
          title: '提示',
          content: '请确认是否开始充电？',
          success: (res) => {
            if (res.confirm) {
              wepy.showLoading({
                title: '开启充电...',
                mask: true
              })
              api.post(chargrURL + 'chargeStart?rdSession=' + _this._token, {
                chargerMode: _this.charger_mode,
                chargerValue: _this.time_value,
                streamNo: _this.code,
                totalFee: _this.totalFee * 100
              }).then(res => {
                console.log(res)
                wepy.hideLoading()
                if (res.code === 0) {
                  wepy.navigateTo({
                    url: '/pages/subpages/pages/charging?orderNo=' + res.data + '&time=' + _this.time_value
                  })
                }
              })
            }
          }
        })
        // 确认提示 --end
      }
    }
  }
  events = {
    // 单选项
    zanSelectChange(value, event) {
      let { componentId } = event.source
      this[`checked_${componentId}`] = value
      this.$apply()
      if (value === '120') {
        this.time_value = 12
        this.charger_mode = 3
        this.$apply()
      } else {
        this.charger_mode = 0
        this.time_value = value
        this.$apply()
      }
      if (this.code) {
        this.checkMoney()
      } else {
        this.showTopTips('请确认二维码编号是否填写')
      }
    }
  }

  // 设备查询
  checkEqui() {
    wepy.showLoading({
      title: '设备查询中...',
      mask: true
    })
    if (this.code) {
      wepy.request({
        url: api.apiData.host + equiUrl + '?rdSession=' + this._token + '&serialNo=' + this.code + '&tagsFlag=true',
        method: 'GET',
        success: res => {
          wepy.hideLoading()
          if (res.data.code === 0) {
            this.equiDisabled = false
            this.$apply()
            /* this.equiDisabled = false
            this.checked_base = 120
            this.time_value = 12
            this.charger_mode = 3
            this.$apply()
            this.checkMoney() */
          } else {
            // 设备无效不可选择时长
            this.equiDisabled = true
            this.$apply()
            this.equiDisabledFun()
            if (res.data.code === -100) {
              console.log('未登录')
            } else if (res.data.code === -50) {
              this.timeoutEqui(res.data.msg)
            } else {
              let _msg = res.data.msg ? res.data.msg : res.data.errMsg
              wepy.showModal({
                title: '温馨提示',
                content: _msg,
                confirmText: '首页扫码',
                success: function(res) {
                  if (res.confirm) {
                    page.goHome()
                  }
                }
              })
            }
          }
        },
        fail: (err) => {
          // 时长不可选
          this.equiDisabled = true
          this.$apply()
          let _msg = err.data.msg ? err.data.msg : err.errMsg
          if (err.data.code === -50) {
            this.timeoutEqui(_msg)
          } else {
            wepy.showModal({
              title: '错误提示',
              content: '网络异常，请稍后重试',
              confirmText: '我知道了',
              success: (res) => {
              }
            })
          }
        }
      })
    } else {
      this.showTopTips('未填二维码编号')
    }
  }
  // 账户余额
  getBalance() {
    wepy.showLoading({
      title: '余额查询中...',
      mask: true
    })
    api.get(balaneURL + 'queryBalanceBySession?rdSession=' + this._token).then(res => {
      wepy.hideLoading()
      this.showLoading = false
      this.$apply()
      if (res.code === 0) {
        this.showTopup = false
        this.account = parseFloat(api.fotmatMoney(res.data))
        this.$apply()
      }
    })
  }

  // 预估金额查询
  checkMoney() {
    // const _this = this
    wepy.showLoading({
      title: '费用查询中...',
      mask: true
    })
    api.get(chargrURL + 'getServerPayInfo?serialNum=' + this.code + '&chargeTime=' + this.time_value).then(({data}) => {
      wepy.hideLoading()
      let _changeFee = data.changeFee ? data.changeFee : 0
      let _serviceFee = data.serviceCharge ? data.serviceCharge : 0
      this.changeFee = api.fotmatMoney(_changeFee)
      this.serviceFee = api.fotmatMoney(_serviceFee)
      this.totalFee = api.fotmatMoney(Number(data.changeFee) + Number(data.serviceCharge))
      this.$apply()
      if (this.totalFee > parseFloat(this.account)) {
        this.showTopTips('您的余额不足以选择此服务，请及时充值')
      }
    })
  }
  // 设备超时
  timeoutEqui(msg) {
    const _this = this
    wepy.showModal({
      title: '温馨提示',
      content: msg,
      confirmText: '重试',
      success: (res) => {
        if (res.confirm) {
          _this.checkEqui()
        }
      }
    })
  }
  // 跳转在线充值
  goTopup() {
    wepy.navigateTo({
      url: '/pages/subpages/pages/wallet-topup?account=' + this.account
    })
  }
  // 顶部提示
  showTopTips(content) {
    this.$invoke('zanToptips', 'showZanTopTips', { content: content, options: 2000 })
  }
  // 设备不可用,时长默认不选择,预估金额为零
  equiDisabledFun() {
    this.checked_base = -1
    this.time_value = 0
    this.changeFee = api.fotmatMoney(0)
    this.serviceFee = api.fotmatMoney(0)
    this.totalFee = api.fotmatMoney(0)
    this.$apply()
  }
}
</script>
