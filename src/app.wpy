<style lang="scss">
@import "./assets/icon/icon_font.scss";
@import "./zanui/helper.scss";
@import "./zanui/panel.scss";
@import "./zanui/cell.scss";
@import "./zanui/card.scss";
@import "./zanui/col.scss";
@import "./zanui/color.scss";
@import "./zanui/btn.scss";
page{
  color: #444;
}
.container {
  background: #f0eff5;
  overflow: hidden;
  min-height: 100vh;
  box-sizing: border-box;
  position: relative;
}
.container::before {
  position: fixed;
  top: 0;
  left: 0;
  content: ' ';
  width: 100%;
  height: 1rpx;
  background-color: #f0eff5;
  z-index: 5;
}
.page_spacing {
  padding: 0 30rpx 40rpx;
}
.doc-title {
  position: relative;
  padding: 10px 15px;
  line-height: 25px;
  font-size: 36rpx;
  color: #666;
}

.doc-description {
  margin: 14px 0;
  padding: 0 15px;
  font-size: 14px;
  line-height: 20px;
  color: #666;
}

</style>
<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/home',
      'pages/index',
      'pages/personal',
      'pages/order',
      'pages/wallet',
      'pages/message',
      'pages/setting',
      'pages/help',
      'pages/about',
      'pages/scancode/index'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarTextStyle: 'white',
      navigationBarBackgroundColor: '#1AAD19',
      navigationBarTitleText: 'WeChat'
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
