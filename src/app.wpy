<style lang="scss">
@import "./assets/icon/icon_font.scss";
@import "./zanui/helper.scss";
@import "./zanui/panel.scss";
@import "./zanui/cell.scss";
@import "./zanui/card.scss";
@import "./zanui/col.scss";
@import "./zanui/color.scss";
@import "./zanui/btn.scss";
@import "./zanui/tag.scss";
@import "./zanui/load.scss";
page{
  color: #444;
}
.container {
  background: #f0eff5;
  overflow: hidden;
  min-height: 100vh;
  box-sizing: border-box;
  position: relative;
}
.container::before {
  position: fixed;
  top: 0;
  left: 0;
  content: ' ';
  width: 100%;
  height: 1rpx;
  background-color: #f0eff5;
  z-index: 5;
}
.page_spacing {
  padding: 0 30rpx 40rpx;
  overflow: hidden;
}
.doc-title {
  position: relative;
  padding: 10px 15px;
  line-height: 25px;
  font-size: 36rpx;
  color: #666;
}

.doc-description {
  margin: 14px 0;
  padding: 0 15px;
  font-size: 14px;
  line-height: 20px;
  color: #666;
}

.margin-top-10{
  margin-top: 10rpx;;
}
.margin-top-15{
  margin-top: 15rpx;;
}
.margin-top-30{
  margin-top: 30rpx;;
}
.padding-rl-30{
  padding-left: 30rpx;
  padding-right: 30rpx;
}
.padding-right-30{
  padding-right: 30rpx;
}
.padding-bottom-30{
  padding-bottom: 30rpx;
}

</style>
<script>
import wepy from 'wepy'
import 'wepy-async-function'
import api from './common/api'
import page from './common/page'
const URL = 'platform/platform/customer/getCustomerByKey'
export default class extends wepy.app {
  config = {
    pages: [
      'pages/home',
      'pages/personal',
      'pages/order',
      'pages/wallet',
      'pages/wallet-detail',
      'pages/wallet-topup',
      'pages/wallet-topup-record',
      'pages/message',
      'pages/setting',
      'pages/help',
      'pages/about',
      'pages/scancode/index',
      'pages/charging',
      'pages/authorize',
      'pages/setting-user'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarTextStyle: 'white',
      navigationBarBackgroundColor: '#1AAD19',
      navigationBarTitleText: '康体佳充电'
    }
  }
  globalData = {
    receiving: false,
    token: '',
    userInfo: null,
    code: null,
    longitude: 0,
    latitude: 0
  }
  onLaunch() {
    const updateManager = wepy.getUpdateManager()
    updateManager.onCheckForUpdate(function (res) {
      // 请求完新版本信息的回调
      console.log(res.hasUpdate)
    })
    updateManager.onUpdateReady(function () {
      wepy.showModal({
        title: '更新提示',
        content: '新版本已经准备好，是否重启应用？',
        success: function (res) {
          if (res.confirm) {
            // 新的版本已经下载好，调用 applyUpdate 应用新版本并重启
            wepy.clearStorage()
            updateManager.applyUpdate()
          }
        }
      })
    })
    updateManager.onUpdateFailed(function () {
      // 新的版本下载失败
      console.log('下载失败，请重新再试')
      wepy.showModal({
        title: '更新提示',
        content: '新版本下载失败',
        showCancel: false
      })
    })
  }
  onShow () {
    try {
      this.token = this.token ? this.token : wepy.getStorageSync('token_r')
      if (this.token) {
        // Do something with return value
        console.log('token主页:' + this.token)
        // 判断token是否有效
        api.get(URL + '?rdSession=' + this.token).then(res => {
        })
      } else {
        console.log('空L:')
        page.goauthorize()
      }
    } catch (e) {
      // Do something when catch error
      console.log('错误:' + e)
      wepy.showToast({
        title: '未登录',
        icon: 'none',
        duration: 2000,
        success: res => {
          page.goauthorize()
        }
      })
    }
  }

  constructor () {
    super()
    // this.use('promisify')
    this.use('requestfix')
  }
}
</script>
